name: Deploy to WordPress Plugin Repository

on:
  push:
    branches:
      - main  # keep your default branch here

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Subversion
        run: |
          sudo apt-get update
          sudo apt-get install -y subversion rsync

           - name: Set variables
        id: vars
        run: |
          # Plugin-specific identifiers (local vars)
          PLUGIN_SLUG="llmagnet-llm-txt-generator"
          MAIN_FILE="llmagnet-ai-seo-optimizer.php"

          # Export for later steps
          echo "PLUGIN_SLUG=$PLUGIN_SLUG" >> "$GITHUB_ENV"
          echo "MAIN_FILE=$MAIN_FILE" >> "$GITHUB_ENV"

          # Extract version from plugin header (handles leading "* " in header lines)
          VERSION=$(grep -Ei '^\s*\*?\s*Version:\s*' "$MAIN_FILE" | head -1 | sed -E 's/.*Version:\s*([^ ]+).*/\1/' | tr -d '\r')
          if [ -z "$VERSION" ]; then
            echo "Could not determine version from $MAIN_FILE"
            exit 1
          fi

          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "Determined plugin version: $VERSION"

      - name: Deploy to WordPress SVN
        env:
          SVN_USERNAME: ${{ secrets.WP_SVN_USERNAME }}
          SVN_PASSWORD: ${{ secrets.WP_SVN_PASSWORD }}
        run: |
          set -euo pipefail

          # Read variables
          PLUGIN_SLUG="${{ env.PLUGIN_SLUG }}"
          VERSION="${{ env.VERSION }}"
          SVN_URL="https://plugins.svn.wordpress.org/$PLUGIN_SLUG"
          SVN_DIR="$PLUGIN_SLUG-svn"

          echo "SVN URL: $SVN_URL"
          echo "SVN checkout dir: $SVN_DIR"
          echo "Tagging version: $VERSION"

          # Checkout SVN repository
          svn checkout --username "$SVN_USERNAME" --password "$SVN_PASSWORD" "$SVN_URL" "$SVN_DIR" --non-interactive --trust-server-cert

          # Ensure directories exist
          mkdir -p "$SVN_DIR/trunk" "$SVN_DIR/assets" "$SVN_DIR/tags"

          # Move plugin asset images (if present) to /assets (not in trunk)
          for file in banner-*.* icon*.* screenshot-*.*; do
            if [ -f "$file" ]; then
              mv "$file" "$SVN_DIR/assets/"
            fi
          done

          # Copy plugin files to trunk (clean sync)
          rsync -rc --delete \
            --exclude=".git" \
            --exclude=".github" \
            --exclude="node_modules" \
            --exclude="*.zip" \
            --exclude=".gitignore" \
            --exclude="$SVN_DIR" \
            --exclude="banner-*.*" \
            --exclude="icon*.*" \
            --exclude="screenshot-*.*" \
            ./ "$SVN_DIR/trunk/"

          # Check if tag already exists; if yes, abort (avoid re-tagging same version)
          if svn ls "$SVN_URL/tags/$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists. Please bump the version in ${{ env.MAIN_FILE }} before deploying."
            exit 1
          fi

          # Create a new tag from trunk
          svn cp "$SVN_DIR/trunk" "$SVN_DIR/tags/$VERSION"

          # Move into the SVN working copy
          cd "$SVN_DIR"

          # Remove deleted files and add new ones
          svn status | grep '^!' | sed 's/^!//' | xargs -r svn delete
          svn status | grep '^?' | sed 's/^?//' | xargs -r svn add

          # Commit to SVN
          svn commit -m "Deploy version $VERSION" --username "$SVN_USERNAME" --password "$SVN_PASSWORD" --non-interactive --trust-server-cert
